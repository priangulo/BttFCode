// Automatically generated code.  Edit at your own risk!
// Generated by bali2jak v2002.09.03.
package guidsl;

import java.util.*;

class ExtraPredicates  {


    public static ArrayList XTable = new ArrayList();
    // XTable contains all additional constraints
    
    public static void init() {
        XTable = new ArrayList();
    }
    
    public static void clear() { XTable.clear(); }
    
    public static void add(node constraint) { XTable.add(constraint); }

    public static void dumpXTable() {
        System.out.println("-------Begin Xtable Dump----------");
        int cnt = XTable.size();
        for (int i = 0; i < cnt; i++) {
            node n = (node) XTable.get(i);
            System.out.println(n);
        }
        System.out.println(cnt + " additional constraints in all.");
        System.out.println("-------End CXtable Dump----------");
    }

    static void makeClauses() {
        if (Main.outputModelPredicate) {
            System.out.println();
            System.out.println("// Extra Predicates");
        }

        Iterator i = XTable.iterator();
        while (i.hasNext()) {
            node n = (node) i.next();
            node simple = n.klone().simplify();
            if (Main.outputModelPredicate) {
                System.out.println(simple + " and");   /*dsb*/
            }
            node cnf = simple.klone().cnf();

            ArrayList al = new ArrayList();
            cnf.reduce(al);
            cnfClause.setFormula(al, n);
            cnfClause.clist.addAll(al);
        }
    }

    // method walks through the CTable. Each formula
    // is converted into a cnf formula, and then it is
    // converted into CNF format
    public static void toCnfFormat(cnfout out) throws CNFException {
        int cnt = XTable.size();
        for (int i = 0; i < cnt; i++) {
            node n = (node) XTable.get(i);
            out.beginFormula(n);
            node simple = n.klone().simplify();
            out.comment(simple);
            node cnf = simple.klone().cnf();
            out.cnfcomment(cnf);
            cnf.toCnfFormat(out);
            out.endFormula();
        }
    }

     // Get the constraints encoded as XML
    // This will need to be modified add full XML support.
    public static String getCTableXML() {
        StringBuffer str = new StringBuffer();

        str.append("<constraints>\n");
        int cnt = XTable.size();
        for (int i = 0; i < cnt; i++) {
            node n = (node) XTable.get(i);
            str.append("<constraint>" + n.toXMLString() + "</constraint>\n");
        }

        str.append("</constraints>\n");

        return str.toString();
    }

    public static node getFormula() {
        return gObj.getFormula(XTable.iterator());
    }

}
